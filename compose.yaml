# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    container_name: rereal-api
    build:
      context: .
    shm_size: 512mb
    environment:
      NODE_ENV: production
    env_file:
      - ./.env
    #  `depends_on` tells Docker Compose to start the database before your application.
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 2023:2023
  db:
    container_name: rereal-api-db
    image: postgres
    user: postgres
    build:
      context: docker/db
    restart: unless-stopped
    # set shared memory limit when using docker-compose
    shm_size: 512mb
    #user: postgres
    ##  The `db-data` volume persists the
    ## database data between container restarts.
    volumes:
      - euro-rereal-api-data:/var/lib/postgresql/data
    environment:
      - PGUSER=postgres
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_ADMIN}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    env_file:
      - ./.env
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${DB_NAME} -U $${DB_ADMIN}" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  euro-rereal-api-data:

